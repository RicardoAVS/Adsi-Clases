 /* Ejercicio #1
             * Leer 5 números, crear un vector con ellos y luego mostrar el vector.
             */

            Console.WriteLine(" **** Ejercicio 1 **** ");

            int[] vector = new int[5];

            for (int i = 0; i < 5; i++)
            {
                Console.WriteLine("Ingresa un numero: ");
                int numero = int.Parse(Console.ReadLine());
                vector[i] = numero;
            }

            for (int i = 0; i < vector.Length; i++)
            {
                Console.WriteLine(vector[i]);
            }

            /* Ejercicio #2
             * 
             * Realizar un algoritmo que genere los números pares de 2 a 200, llenar un vector con ellos y 
             * mostrar el vector. 
             */

            Console.WriteLine("");
            Console.WriteLine(" **** Ejercicio 2 **** ");
            Console.WriteLine("Vector con los numeros pares del 2 al 200");

            int[] arr = new int[100];
            int index = 0;

            for (int i = 2; i <= 200; i += 2)
            {
                arr[index] = i;
                Console.WriteLine(arr[index]);
                index++;
                
            }



            /* Ejercicio #3
             * 
             * Llenar un vector con los 10 primeros múltiplos de 3 y luego sume los elementos del vector. 
             * Mostrar la suma de los elementos.
             */
            Console.WriteLine("");
            Console.WriteLine(" **** Ejercicio 3 **** ");

            int[] Mult3Arr = new int[10];
            int suma = 0;
            int indexMult3 = 0;

            for (int i = 3; i <= 30; i += 3)
            {
                Mult3Arr[indexMult3] = i;
                suma += i;
                indexMult3++;
            }

            Console.WriteLine("La suma total de los primeros 10 multiplos de 3 es " + suma);


            /* Ejercicio #4
             * 
             * Crear un vector de 20 elementos con valores numéricos diferentes. Hallar el mayor valor y su 
             * posición y el valor promedio. 
             * 
             */

            Console.WriteLine("");
            Console.WriteLine(" **** Ejercicio 4 **** ");

            int[] array = { 2, 4, 5, 10, 15, 6, 7, 33, 50, 111, 1, 31, 22, 24, 79, 12, 55, 100, 20 };
            int numMayor = 0;
            int indx = 0;
            for (int i = 0; i < array.Length; i++)
            {

                if (array[i] > numMayor)
                {
                    numMayor = array[i];
                    indx = i;
                }

            }

            Console.WriteLine("El numero mayor es " + numMayor + " y su posicion es la " + indx);


            /* Ejercicio #5
             *Leer un vector de N elementos numéricos enteros y posteriormente: 
             *  Mostrar cuántas veces se repite el número 10. 
             *  Sume los elementos de las posiciones pares. 
             *  Muestre los elementos del vector empezando por el último elemento. 
             *           
             */

            Console.WriteLine("");
            Console.WriteLine(" **** Ejercicio 5 **** ");

            int[] vect = { 1, 10, 5, 4, 44, 10, 50, 100, 15, 32, 10 };
            int numDiezCount = 0;
            int sumaPairIndex = 0;

            for (int i = vect.Length - 1; i >= 0; i--)
            {
                if (i == 0)
                {
                    continue;
                }
                else if (vect[i] == 10)
                {
                    numDiezCount++;

                    if (i % 2 == 0)
                    {
                        sumaPairIndex += vect[i];
                    }
                }
                else if (i % 2 == 0)
                {
                    sumaPairIndex += vect[i];
                }
                else
                {
                    Console.WriteLine(vect[i]);
                }
            }

            Console.WriteLine("La cantidad de numeros que son iguales a 10 es de " + numDiezCount);
            Console.WriteLine("La Suma de los elementos en las posiciones pares es de " + sumaPairIndex);


            /* Ejercicio #6
             * 
             * De los 50 elementos de un vector, muestre cuántos son: pares, impares, negativos y positivos. 
             * 
             */
            Console.WriteLine("");
            Console.WriteLine(" **** Ejercicio 6 **** ");

            int[] arrayL = new int[50];
            int parCount = 0;
            int imparCount = 0;
            int numPositivo = 0;
            int numNegativo = 0;

            for (int i = 0; i <= 50; i++)
            {
                if (i == 0)
                {
                    continue;
                }

                if (i > 0)
                {
                    numPositivo++;

                    if (i % 2 == 0)
                    {
                        parCount++;

                    }
                    else
                    {
                        imparCount++;
                    }

                }
                else
                {
                    numNegativo++;

                    if (i % 2 == 0)
                    {
                        parCount++;
                    }
                    else
                    {
                        imparCount++;
                    }
                }
            }

            Console.WriteLine("La cantidad de numeros positivos es " + numPositivo);
            Console.WriteLine("La cantidad de numeros negativos es " + numNegativo);
            Console.WriteLine("La cantidad de numeros pares es " + parCount);
            Console.WriteLine("La cantidad de numeros impares es " + imparCount);

            /* Ejercicio #7
             * 
             * En vector de 40 elementos numéricos llamado totales, se requiere ir sumando y mostrando cada elemento, 
             * siempre y cuando sea mayor al primer elemento y menor al elemento 25. 
             * Finalmente, muestre el total de los elementos que fueron sumados. 
             */

            Console.WriteLine("");
            Console.WriteLine(" **** Ejercicio 7 **** ");

            int[] totales = new int[40];
            totales[0] = 1;
            totales[24] = 5;
            int sumaTotal = 0;

            Console.WriteLine("Elemento en la primera posicion = " + totales[0]);
            Console.WriteLine("Elemento en la posicion 25 = " + totales[24]);
            Console.WriteLine("Buscando numeros mayores al primer y vigesimoquinto elemento" );

            for (int i = 0; i < 40; i++)
            {
                if (i == 0 || i == 24)
                {
                    continue;
                }
                else
                {
                    totales[i] = i;

                    if (totales[i] > totales[0] && totales[i] < totales[24])
                    {
                        sumaTotal += totales[i];
                        Console.WriteLine(totales[i]);
                    }
                }
            }

            Console.WriteLine("La suma total de los numeros es de " + sumaTotal);

            /* Ejercicio #8
             * 
             * 8. Se tiene un vector con las notas de un grupo de 30 estudiantes. Hallar y mostrar la nota más 
             * alta y la más baja, cuántas personas perdieron y la nota promedio del grupo. 
             */

            Console.WriteLine("");
            Console.WriteLine(" **** Ejercicio 8 **** ");

            int[] notas = new int[30];
            int notaMaxima = 0;
            int notaMinima = 20;
            int notaPromedioGrupo = 0;
            int numReprobados = 0;
            int sumaTotalNotas = 0;

            for (int i = 0; i < 30; i++)
            {
                Random random = new Random();
                int randomNumb = random.Next(1, 21);
                notas[i] = randomNumb;

                if (notas[i] < 10)
                {
                    numReprobados++;
                }

                if (notas[i] > notaMaxima)
                {
                    notaMaxima = notas[i];
                    sumaTotalNotas += notas[i];
                }

                if (notas[i] < notaMaxima)
                {
                    notaMinima = notas[i];
                    sumaTotalNotas += notas[i];
                }

            }
            notaPromedioGrupo = sumaTotalNotas / notas.Length;

            Console.WriteLine("La nota mas alta fue de " + notaMaxima + " puntos");
            Console.WriteLine("La nota mas baja fue de " + notaMinima + " puntos");
            Console.WriteLine("La nota promedio del grupo fue de " + notaPromedioGrupo + " puntos");

            /* Ejercicio #9 
             * 
             * Crear 2 vectores de "N" posiciones cada uno. Con el resultado de la multiplicación de elemento por elemento entre cada vector, 
             * formar otro arreglo; muestre posteriormente, los elementos del vector resultante. 
             */

            Console.WriteLine("");
            Console.WriteLine(" **** Ejercicio 9 **** ");

            int[] firstArr = { 2, 4, 6, 8, 10 };
            int[] secondArr = { 1, 3, 5, 7, 9 };
            int[] multArr = new int[firstArr.Length];


            Console.WriteLine("Resultado de la multiplicacion de cada elemento en ambos vectores ");
            for (int i = 0; i < firstArr.Length; i++)
            {
                
                multArr[i] = firstArr[i] * secondArr[i];
                Console.WriteLine(firstArr[i] + " * " + secondArr[i] + " = " + multArr[i]);

                Console.WriteLine("Elemento en la posicion " + i + " = " + multArr[i]);
            }


            /* Ejercicio 10
             * 
             * Cargar 2 vectores, uno con los códigos de los estudiantes que perdieron C, el segundo con los códigos de los estudiantes que perdieron Java. 
             * Se pide crear otro arreglo formado por los códigos de los estudiantes que perdieron ambas materias. Mostrar el arreglo resultante. 
             */

            Console.WriteLine("");
            Console.WriteLine(" **** Ejercicio 10 **** ");

            int[] perdieronC = { 1, 2, 3, 4, 5, 6, 7 };
            int[] perdieronJava = { 8, 9, 10, 11, 12, 13 };
            int[] perdieronAmbas = new int[perdieronC.Length + perdieronJava.Length];
            int indexVector = 0;

            Console.WriteLine("Codigo estudiantes que perdieron ambas materias");
            for (int i = 0; i < perdieronC.Length; i++)
            {
                perdieronAmbas[i] = perdieronC[i];
                indexVector++;
                Console.WriteLine(perdieronAmbas[i]);
            }

            for (int i = 0; i < perdieronJava.Length; i++)
            {
                perdieronAmbas[indexVector] = perdieronJava[i];
                indexVector++;

            }


            for (int i = 0; i < perdieronAmbas.Length; i++)
            {
                Console.WriteLine(perdieronAmbas[i]);
            }

            /* Ejercicio #11 
             * 
             * 11. Lea un vector S de N elementos e inviértalo. Utilice otro Vector. 

             */

            Console.WriteLine("");
            Console.WriteLine(" **** Ejercicio 11 **** ");

            int[] numVector = { 14, 12, 6, 25, 34, 23, 5 };
            int[] reverseVector = new int[numVector.Length];

        
            Console.WriteLine("Vector invertido ");
            for (int i = numVector.Length - 1; i >= 0; i--)
            {
                reverseVector[i] = numVector[i];
                Console.WriteLine(reverseVector[i]);
            }

            /* Ejercicio #13 
             * 
             * Se tiene un vector de 365 elementos, cada elemento corresponde a la estación para ese día 
             * (V - Verano, I- Invierno, O - Otoño, P - Primavera).
             * Calcular el número de días de verano durante el año. 
             */

            Console.WriteLine("");
            Console.WriteLine(" **** Ejercicio 13 **** ");


            int[] daysInYear = new int[365]; // El vector contendra los numeros del 1 a 365 -- Representan los dias del año no bisciesto
            int sumDiasVerano = 0;
            int comienzoVerano = 169;    // Esta estacion va desde el 20 de Junio hasta el 22 de Septiembre, el 169 representa la suma de los dias anteriores
            int finalVerano = daysInYear.Length - 100;	// El 100 representa la suma de los dias desde el 23 de Septiembre hasta el 31 de Diciembre

            Console.WriteLine("Cantidad de dias que dura el verano");
            for (int i = 0; i < 365; i++)
            {
                daysInYear[i] = (i + 1);
            }

            for (int i = comienzoVerano; i < finalVerano; i++)
            {
                sumDiasVerano += 1;
            }

            Console.WriteLine(sumDiasVerano);


            /* Ejercicio #14
             * 
             * Elabore un algoritmo que lea un vector de N elementos. Si el número de elementos es par intercambiar el elemento i-ésimo por el elemento i-ésimo+1.
             * Mostrar el vector final. Si el número de elementos es impar, indicarlo en un mensaje que no es posible hacer el intercambio
             * y forzar al usuario hasta que digite un número de elementos par. 
             */

            Console.WriteLine("");
            Console.WriteLine(" **** Ejercicio 14 **** ");

            int[] arrayPar = { 1, 2, 3, 4, 5, 6 };
            int[] newArr = new int[arrayPar.Length];
            int numeroPar = 1;

            while (numeroPar % 2 == 1)
            {
                Console.WriteLine("Digite un numero par ");
                numeroPar = int.Parse(Console.ReadLine());
            }

                for (int i = 0; i < arrayPar.Length; i++)
                {
                    if (i == (arrayPar.Length - 1))
                    {
                        newArr[i] = arrayPar[0];
                    }
                    else
                    {
                        newArr[i] = arrayPar[i + 1];
                    }
                }

                Console.WriteLine(" *** Resultado Final **** ");

                for (int i = 0; i < arrayPar.Length; i++)
                {
                    Console.WriteLine(newArr[i]);
                }
            

                /* Ejercicio #15
                 * 
                 * Teniendo un vector de 144 elementos numéricos enteros diferentes, realice lo siguiente: 
                 * - Buscar el elemento mayor y en qué posición lo encontró. 
                 * - Sumar los elementos almacenados en las posiciones pares y mostrar la suma. 
                 * - Buscar cuántos elementos del vector son mayores de 80 y menores de 120. 
                 * - Hallar cuántos elementos del vector son múltiplos de 7. 
                 * - Mostrar los elementos del vector de forma inversa. 
                 */

                Console.WriteLine("");
                Console.WriteLine(" **** Ejercicio 15 **** ");

                int[] randomArray = { 1, 5, 3, 10, 100, 40, 77, 33, 599, 329, 70, 140, 7, 118, 90 };
                int highestNum = 0;
                int pairIndexSum = 0;
                int indexHighestNum = 0;
                int higher80lower120 = 0;
                int mult7Count = 0;

            Console.WriteLine("Vector invertido");

                for (int i = randomArray.Length - 1; i >= 0; i--)
                {
                    if (i % 2 == 0)
                    {
                        pairIndexSum += randomArray[i];
                    }
                    else if (randomArray[i] % 7 == 0)
                    {
                        mult7Count++;
                    }

                    if (randomArray[i] > highestNum)
                    {
                        highestNum = randomArray[i];
                        indexHighestNum = i;
                    }

                    if (randomArray[i] > 80 && randomArray[i] < 120)
                    {
                        higher80lower120++;
                    }

                    Console.WriteLine(randomArray[i]);
                }

                Console.WriteLine("");

                Console.WriteLine("El numero con el valor mayor es " + highestNum + " Se encuentra en la posicion " + indexHighestNum + " del vector");
                Console.WriteLine("La suma de los numeros en las posiciones pares del vector es de  " + pairIndexSum);
                Console.WriteLine("Cantidad de numeros mayores a 80 y menores a 120: " + higher80lower120);
                Console.WriteLine("Cantidad de numeros multiplos de 7 es de " + mult7Count);


                /* Ejercicio #16
                 * 
                 * Se tiene un vector de 125 elementos con valores numéricos, realice lo siguiente: 
                 * - Hallar y mostrar el valor promedio del vector. 
                 * - Leer un valor x y buscar en que posición del vector se encuentra. 
                 * - Llene un vector con los elementos de las posiciones impares. 
                 * - Busque cuántos elementos del vector son múltiplos de 3 y positivos. 
                 */
                Console.WriteLine("");
                Console.WriteLine(" **** Ejercicio 16 **** ");

                int[] vectorElement = new int[126];
                int[] vectorImpar = new int[126];
                int sum = 0;
                int promedio = 0;
                int multiplosTresCount = 0;
                int indexNum = 0;

                for (int i = 0; i < 126; i++)
                {
                    Random random = new Random();
                    int numeroAlAzar = random.Next(1, 127);
                    vectorElement[i] = numeroAlAzar;

                    if (i % 2 == 1)
                    {
                        vectorImpar[indexNum] = numeroAlAzar;
                        indexNum++;
                    }
                }

                Console.WriteLine("Que numero quiere buscar ");
                int busquedaNumero = int.Parse(Console.ReadLine());
                int posicionNumero = -1;

                for (int i = 0; i < vectorElement.Length; i++)
                {
                    sum += vectorElement[i];

                    if (vectorElement[i] % 3 == 0)
                    {
                        multiplosTresCount++;
                    }

                    if (vectorElement[i] == busquedaNumero)
                    {
                        posicionNumero = i;
                    }
                }

                promedio = sum / (vectorElement.Length);
                Console.WriteLine("El promedio total del vector es " + promedio);

                if (posicionNumero != -1)
                {
                    Console.WriteLine("El numero se encuentra en la posicion " + posicionNumero);
                }
                else
                {
                    Console.WriteLine("El numero no se encuentra en el vector");
                }

                Console.WriteLine("La cantidad de numeros multiplos de 3 es " + multiplosTresCount);


